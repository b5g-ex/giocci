defmodule ModuleConverterTest do
  use ExUnit.Case
  alias Giocci.CLI.ModuleConverter
  # doctest Giocci.CLI.ModuleConverter

  setup do
    # 以下、ModuleConverter.encode(Giocci.CLI.RegContact)のデータ
    encode_data =
      "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mAukNieJ4lGHNZVf8dwoBXgSlP6dy/rLUEoOOFB8XliG3FIBJWor3Kv9nwZ5xNpjoBbHWmnkQkYcUPCm2SJZbfqsIFH2dg4Q57FGr4wW1qixz2vsTik0inCo4Wt2i8GsGV7UDJMKkWGaaor1hRaHVXO8XJ0gYi5UIayMFnZQY/cLbKA+GoLQnDJniVCeCUst9T+u5+hVUKVnL6sCBFWlEInWNsMGqghR8R108sn9TTdhelLsoPDmwe8/XQx3L4DX9yiAN/cugLf/oADe3aMA3tcFoBCWgxNYV9eu8q1zN+18Jidl7k6Z7wOXuwglC5ZSF1Hml6XUBlm6fW5ugDXScFlVdcbhp06+fLE4ijTYMrjOVfcXChnk3cNsarO18tfLDksj1cfU342xYiu4pENwG81GCLlsg17W/4/3RuF+BR4BlVskSmJoZKjp3d/INCqZvuFYjj3OQlQMn6uobtVn7KqaOztFwZnfPT1Zl71H3aNyTVAz9LAupivIrhnhrWm4MbR+3sTimBInH+xyWIz0ICgadIess1LWvSoMiH4CV8rkl/myqrO6e187XGd1Uxk31NkYww1TO7tTamdVavPrrX4epEnzrUS9XQ1IGFP1q3pvGKsEIxYLZU70UQXJAFXvU1fkPfgLXVEKYERvY3MAAAE4g1AAAAHieJzLYC9nT8lPLo4vM0xkKmdLzcmsyCzKZWBg4C1JrSjRz00syk7JL88rAYowgoSZUvOAFGPws76lz5t2Pm6a5J6Zn5yc+bhx9fOZu1/2bHrcOPNxU/fjhiYuLmVlhSf7urkUgCAztcJOAaJSz9nHUy8oNd05P68kMblEr7gksagkvig1PbO4JLVIA6xcT0/PTiEawVRQqLZKz8lPSszRUbAqSs1JrKzVQZZFUaqgkFhSUhSfklqWmZxqpaCUk5qipINFQUllAUg6Jb+0BF0+GeK2+LzEXKASq5R8QxwKyhJzSoEqDNCk8/JTUqGakRwOEjWsRVYZi+DEanKBwpghBxTQGawZzOUcaaV5ySWZ+XnlfKhhlMiYKJsDiw8RtPDLAVKaWeUsefl5qWADswDD4412RXhDawAAAGiDaAJ3EWVsaXhpcl9jaGVja2VyX3YxdAAAAAF3B2V4cG9ydHNsAAAAAWgCaAJ3DnN0YXJ0X3JlZ2lzdGVyYQF0AAAAAncEa2luZHcDZGVmdxFkZXByZWNhdGVkX3JlYXNvbncDbmlsakxpbmUAAAAzAAAAAAAAAAAAAAAHAAAAAwAAAAESCR0JLwkwABZsaWIvY2xpL3JlZ19jb250YWN0LmV4AFR5cGUAAAAKAAAAAgAAAAEf/wAAawBqL1VzZXJzL2thenVtYS9naXQvT3JnYW5pemF0aW9uL2I1Zy1leC9naW9jY2kvX2J1aWxkL3Rlc3QvbGliL2dpb2NjaS9lYmluL0VsaXhpci5HaW9jY2kuQ0xJLlJlZ0NvbnRhY3QuYmVhbQ=="

    {:ok, encode_data: encode_data}
  end

  test "encode module", state do
    data = ModuleConverter.encode(Giocci.CLI.RegContact)

    assert data == state.encode_data
  end

  test "decode module", state do
    {name, _binary, _path} = ModuleConverter.decode(state.encode_data)

    assert name == Giocci.CLI.RegContact
  end

  test "load module", state do
    result =
      ModuleConverter.decode(state.encode_data)
      |> ModuleConverter.load()

    assert result == {:module, Giocci.CLI.RegContact}
  end
end
